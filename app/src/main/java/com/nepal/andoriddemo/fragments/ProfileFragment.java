package com.nepal.andoriddemo.fragments;import android.annotation.SuppressLint;import android.app.NotificationChannel;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.Context;import android.content.Intent;import android.graphics.Color;import android.media.AudioAttributes;import android.media.RingtoneManager;import android.net.Uri;import android.os.Build;import android.os.Bundle;import androidx.core.app.NotificationCompat;import androidx.fragment.app.Fragment;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import com.nepal.andoriddemo.R;import com.nepal.andoriddemo.activities.FoodMenuActivity;import com.nepal.andoriddemo.activities.MainActivity;import com.nepal.andoriddemo.activities.NotificationActivity;import com.nepal.andoriddemo.helpers.AppFragment;import com.nepal.andoriddemo.utils.Utilities;public class ProfileFragment extends AppFragment implements View.OnClickListener {    private Button buttonNotification;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View view = inflater.inflate(R.layout.fragment_profile, container, false);        initializeView(view);        initializeListeners();        return view;    }    @Override    protected void initializeView(View view) {        buttonNotification = view.findViewById(R.id.button_show_notification);    }    @Override    protected void initializeListeners() {        buttonNotification.setOnClickListener(this);        Log.e("initializeListeners: ", Utilities.getFcmToken());    }    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.button_show_notification:                showCustomAlertDialog();                break;        }    }    private void showCustomAlertDialog() {        startActivity(new Intent(getActivity(), FoodMenuActivity.class));    }    private void sendNotification(String title, String message) {        Intent intent = new Intent(getActivity(), NotificationActivity.class);        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);        PendingIntent pendingIntent = PendingIntent.getActivity(getActivity(), 0 /* Request code */, intent,                PendingIntent.FLAG_ONE_SHOT);        String channelId = getString(R.string.default_notification_channel_id);        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);        NotificationCompat.Builder notificationBuilder =                new NotificationCompat.Builder(getActivity(), channelId)                        .setSmallIcon(R.drawable.ic_push_notification)                        .setContentTitle(title)                        .setContentText(message)                        .setAutoCancel(true)                        .setSound(defaultSoundUri)                        .setContentIntent(pendingIntent);        NotificationManager notificationManager =                (NotificationManager) getActivity().getSystemService(Context.NOTIFICATION_SERVICE);        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {            createNotificationChannel(channelId, notificationManager);        }        assert notificationManager != null;        notificationManager.notify((int) System.currentTimeMillis(), notificationBuilder.build());    }    @SuppressLint("NewApi")    public void createNotificationChannel(String channelId, NotificationManager notificationManager) {        @SuppressLint("WrongConstant")        NotificationChannel channel = new NotificationChannel(channelId, getString(R.string.app_name),                NotificationManager.IMPORTANCE_MAX);        AudioAttributes att = new AudioAttributes.Builder()                .setUsage(AudioAttributes.USAGE_NOTIFICATION)                .setContentType(AudioAttributes.CONTENT_TYPE_SPEECH)                .build();        assert notificationManager != null;        channel.setLightColor(Color.parseColor("#F1E605"));        channel.canShowBadge();        channel.enableVibration(true);        notificationManager = (NotificationManager) getActivity().getSystemService(Context.NOTIFICATION_SERVICE);        notificationManager.createNotificationChannel(channel);    }}