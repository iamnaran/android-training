package com.nepal.andoriddemo.fragments;import android.os.Bundle;import androidx.annotation.NonNull;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.LinearLayout;import com.nepal.andoriddemo.R;import com.nepal.andoriddemo.helpers.AppFragment;import com.nepal.andoriddemo.helpers.AppRecyclerViewAdapter;public class HomeFragment extends AppFragment {    private RecyclerView recyclerView;    private HomeRecyclerViewAdapter homeRecyclerViewAdapter;    @Override    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View view = inflater.inflate(R.layout.fragment_home, container, false);        initializeView(view);        initializeListeners();        prepareRecyclerView();        return view;    }    @Override    protected void initializeView(View view) {        recyclerView = view.findViewById(R.id.recycler_view);    }    @Override    protected void initializeListeners() {    }    private void prepareRecyclerView() {        homeRecyclerViewAdapter = new HomeRecyclerViewAdapter();        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getActivity());        recyclerView.setLayoutManager(linearLayoutManager);        recyclerView.setAdapter(homeRecyclerViewAdapter);        // pagination        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {            @Override            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {                super.onScrollStateChanged(recyclerView, newState);            }            @Override            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {                super.onScrolled(recyclerView, dx, dy);            }        });    }    private class HomeRecyclerViewAdapter extends AppRecyclerViewAdapter {        private final int TYPE_HEADER = 1;        private final int TYPE_ITEM = 2;        private final int TYPE_FOOTER = 3;        @Override        public void add(Object object) {        }        @Override        public void clear() {        }        @NonNull        @Override        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {            if (viewType == 1) {                View itemHeader = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_home_header, parent, false);                return new VHHeader(itemHeader);            } else if (viewType == 2) {                View itemContent = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_home_content, parent, false);                return new VHItem(itemContent);            } else if (viewType == 3) {                View itemFooter = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_home__footer, parent, false);                return new VHFooter(itemFooter);            }            throw new RuntimeException("there is no type that matches the type " + viewType + " + make sure your using types correctly");        }        @Override        public int getItemViewType(int position) {            if (isTypeHeader(position)) {                return TYPE_HEADER;            } else if (isTypeFooter(position)) {                return TYPE_FOOTER;            }            return TYPE_ITEM;        }        private boolean isTypeHeader(int position) {            return position == 0;        }        private boolean isTypeContent(int position) {            return position == 1;        }        private boolean isTypeFooter(int position) {            return position == 5;        }        @Override        public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {            // data holding            if (holder instanceof  VHItem){                VHItem vhItem = (VHItem) holder;            }else if (holder instanceof  VHFooter){                VHFooter vhFooter = (VHFooter) holder;            }else if (holder instanceof VHHeader){                VHHeader vhHeader = (VHHeader) holder;                // prepare inner recyclerview                prepareInnerRecyclerView(vhHeader.innerRecyclerView);            }        }        private void prepareInnerRecyclerView(RecyclerView innerRecyclerView) {            // load inner recyclerview here            // create new adapter for this recyclerview            HeaderRecyclerViewAdapter headerRecyclerViewAdapter = new HeaderRecyclerViewAdapter();            LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getActivity(),                    RecyclerView.HORIZONTAL,false);            innerRecyclerView.setLayoutManager(linearLayoutManager);            innerRecyclerView.setAdapter(headerRecyclerViewAdapter);        }        @Override        public int getItemCount() {            return 10;        }        private class VHItem extends RecyclerView.ViewHolder {            private LinearLayout mainContent;            public VHItem(View itemView) {                super(itemView);                //find view                //implement View.OnClick                // putextra - vlaue - detail activivty            }        }        private class VHHeader extends RecyclerView.ViewHolder {            private RecyclerView innerRecyclerView;            public VHHeader(View itemHeader) {                super(itemHeader);                innerRecyclerView = itemHeader.findViewById(R.id.inner_recycler_view);            }        }        private class VHFooter extends RecyclerView.ViewHolder {            public VHFooter(View itemFooter) {                super(itemFooter);            }        }    }    private class HeaderRecyclerViewAdapter extends AppRecyclerViewAdapter{        @Override        public void add(Object object) {        }        @Override        public void clear() {        }        @NonNull        @Override        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {            View itemHeader = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_inner_rv_content, parent, false);            return new VHIInnerItem(itemHeader);        }        @Override        public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {        }        @Override        public int getItemCount() {            return 10;        }        private class VHIInnerItem extends RecyclerView.ViewHolder {            public VHIInnerItem(View itemHeader) {                super(itemHeader);            }        }    }}