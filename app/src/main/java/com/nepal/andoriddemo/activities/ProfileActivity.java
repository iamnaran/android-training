package com.nepal.andoriddemo.activities;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.ActivityCompat;import android.Manifest;import android.app.AlertDialog;import android.content.DialogInterface;import android.content.Intent;import android.content.pm.PackageManager;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.provider.Settings;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.TextView;import com.google.gson.GsonBuilder;import com.nepal.andoriddemo.R;import com.nepal.andoriddemo.helpers.AppActivity;import com.nepal.andoriddemo.helpers.ShowToast;public class ProfileActivity extends AppActivity implements View.OnClickListener{    private Button button;    private TextView status;    private String[] permissions = new String[]{            Manifest.permission.WRITE_EXTERNAL_STORAGE,            Manifest.permission.READ_EXTERNAL_STORAGE    };    private final int READ_WRITE_REQUEST_CODE = 10;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_profile);        initializeView();        initializeListeners();    }    @Override    protected void initializeView() {        button = findViewById(R.id.button);        status = findViewById(R.id.statusTV);    }    @Override    protected void initializeListeners() {        button.setOnClickListener(this);    }    @Override    public void onClick(View view) {        switch (view.getId()){            case R.id.button:                requestPermisssion();                break;        }    }    private void requestPermisssion() {            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {                if (!checkPermissions()) {                    ActivityCompat.requestPermissions(ProfileActivity.this, permissions, READ_WRITE_REQUEST_CODE);                } else {                    ShowToast.withMessage("Already Granted!");                    status.setText("Already Granted!");                }            } else {                ShowToast.withMessage("Granted Because Lower API Devices");                status.setText("Lower Level Api");            }    }    /**     * requesting list of permissions     */    private boolean checkPermissions() {        for (String permission : permissions) {            if (ActivityCompat.checkSelfPermission(getApplicationContext(), permission) != PackageManager.PERMISSION_GRANTED) {                return false;            }        }        return true;    }    @Override    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {        switch (requestCode) {            case READ_WRITE_REQUEST_CODE:                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {                    Log.e( "onRequestPermission", new GsonBuilder().create().toJson(grantResults));                    status.setText("Okay! Permission Granted..");                } else {                    new AlertDialog.Builder(ProfileActivity.this)                            .setTitle(null)                            .setMessage("Needs permissions to change photo.")                            .setPositiveButton("Go to Settings", new DialogInterface.OnClickListener() {                                public void onClick(DialogInterface dialog, int which) {                                    Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);                                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);                                    Uri uri = Uri.fromParts("package", ProfileActivity.this.getPackageName(), null);                                    intent.setData(uri);                                    startActivity(intent);                                }                            })                            .setNegativeButton("Cancel ", null)                            .show();                }                break;        }    }}