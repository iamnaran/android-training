package com.nepal.andoriddemo.activities;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.graphics.Color;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.TextView;import com.nepal.andoriddemo.R;import com.nepal.andoriddemo.helpers.AppActivity;import com.nepal.andoriddemo.helpers.AppRecyclerViewAdapter;import com.nepal.andoriddemo.helpers.DefineClassType;import com.nepal.andoriddemo.helpers.ShowToast;import com.nepal.andoriddemo.models.Foods;import com.nepal.andoriddemo.models.Notifications;import java.util.ArrayList;import java.util.List;public class FoodMenuActivity extends AppActivity {    private RecyclerView recyclerView;    private Button buttonOrder;    private FoodRecyclerViewAdapter foodRecyclerViewAdapter;    private List<Foods> foodsList = new ArrayList<>();    private int totalCount = 0;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_food_menu);        initializeView();        initializeListeners();        prepareRecyclerView();    }    @Override    protected void initializeView() {        recyclerView = findViewById(R.id.recycler_view);        buttonOrder = findViewById(R.id.button_order);    }    @Override    protected void initializeListeners() {        buttonOrder.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                //logic                ///list ma -- kun check xa                if (foodRecyclerViewAdapter != null) {                    List<Foods> foodArrayList = foodRecyclerViewAdapter.foodsAdapterList;                    for (int i = 0; i < foodArrayList.size(); i++) {                        if (foodArrayList.get(i).isChecked()) {                            // checked item                            totalCount++;                        }                    }                    ShowToast.withMessage("Total checked items " + totalCount);                    totalCount = 0;                }            }        });    }    private void prepareRecyclerView() {        Foods foods = new Foods();        foods.setFoodName("Pizzzaa");        foods.setChecked(false);        for (int i = 0; i < 5; i++) {            foodsList.add(foods);        }        foodRecyclerViewAdapter = new FoodRecyclerViewAdapter(foodsList);        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(FoodMenuActivity.this);        recyclerView.setLayoutManager(linearLayoutManager);        recyclerView.setAdapter(foodRecyclerViewAdapter);    }    private class FoodRecyclerViewAdapter extends AppRecyclerViewAdapter {        private List<Foods> foodsAdapterList;        private boolean onBind;        public FoodRecyclerViewAdapter(List<Foods> foodsList) {            this.foodsAdapterList = foodsList;        }        @Override        public void add(Object object) {        }        @Override        public void clear() {        }        @NonNull        @Override        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {            //views            View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_food_content, parent, false);            return new VHItem(itemView);        }        @Override        public void onBindViewHolder(@NonNull final RecyclerView.ViewHolder holder, final int position) {            // data holding            VHItem vhItem = (VHItem) holder;            Foods food = foodsAdapterList.get(position);            vhItem.foodName.setText(food.getFoodName());            onBind = true;            vhItem.checkBox.setChecked(food.isChecked());            onBind = false;            vhItem.checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {                @Override                public void onCheckedChanged(CompoundButton compoundButton, boolean b) {                    if (!onBind) {                        doCheckBoxWork(b, position);                    }                }            });        }        private void doCheckBoxWork(boolean b, int position) {            Foods foods = foodsAdapterList.get(position);            foods.setChecked(b);            notifyDataSetChanged();        }        @Override        public int getItemCount() {            return foodsAdapterList.size();        }        private class VHItem extends RecyclerView.ViewHolder {            private CheckBox checkBox;            private TextView foodName;            public VHItem(View itemView) {                super(itemView);                checkBox = itemView.findViewById(R.id.check_box);                foodName = itemView.findViewById(R.id.food_name);            }        }    }}